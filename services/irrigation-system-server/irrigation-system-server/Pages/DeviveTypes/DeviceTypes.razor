@page "/device-types"

<PageTitle>Device Types</PageTitle>

@using IrrigationSystemServer.Models
@using IrrigationSystemServer.Services
@inject DeviceTypeService _deviceTypeService

<h1>Device Types</h1>

<NavLink class="nav-link" href="add-device-type">
    <span><span class="oi oi-plus"></span> Add new</span>
</NavLink>



@if (_deviceTypes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Sensors</th>
            <th>Valves</th>
            <th>Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var deviceType in _deviceTypes)
        {
            <tr>
                <td>@deviceType.Name</td>
                <td>@deviceType.SensorCount</td>
                <td>@deviceType.ValveCount</td>
                <td>
                    <a class="text-decoration-none d-block" href="device-types">
                        <span><span class="oi oi-pencil" aria-hidden="true"></span> Edit</span>
                    </a>
                    <a class="text-decoration-none d-block mt-2" @onclick="@(e => DeleteDeviceType(deviceType))" href="device-types">
                        <span class="oi oi-trash" aria-hidden="true"></span> Delete
                    </a>
                </td>
            </tr>
        }
        </tbody>
    </table>
}

@code {
    private List<DeviceType>? _deviceTypes;

    protected override async Task OnInitializedAsync()
    {
        _deviceTypes = await _deviceTypeService.GetAllDeviceTypesAsync();
    }
    
    private async void DeleteDeviceType(DeviceType deviceType)
    {
        await _deviceTypeService.DeleteDeviceTypeAsync(deviceType);
        _deviceTypes?.Remove(deviceType);
    }

}