@page "/add-irrigation-profile"
@using IrrigationSystemServer.Models
@using IrrigationSystemServer.Services
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager
@inject IrrigationProfileService IrrigationProfileService
@inject DeviceService DeviceService


<h2>Add Irrigation-Profile</h2>
<hr />

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="name" class="control-label">Name</label>
                <input id="name" class="form-control" @bind="@_irrigationProfile.Name" />
            </div>
            <div class="form-group">
                <label for="device" class="control-label">Device</label>
                <select @bind="DeviceId" class="form-control" id="device">
                    @if (_devices != null)
                    {
                        @foreach (var device in _devices)
                        {
                            <option value="@device.DeviceId">@device.DeviceId</option>
                        }
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="valve" class="control-label">Valve</label>
                <select @bind="_irrigationProfile.ValveId" class="form-control" id="valve">
                    <option value="" selected disabled hidden>Choose Valve here</option>
                    @foreach (var valve in _valves)
                    {
                        <option value="@valve.ValveId">
                            @valve.PinId (@_deviceType?.ValvePinMap[@valve.PinId])
                        </option>
                    }

                </select>
            </div>
            <div class="form-group">
                <label for="moisture-sensor" class="control-label">Moisture-Sensor</label>
                <select @bind="_irrigationProfile.MoistureSensorId" class="form-control" id="moisture-sensor">
                    <option value="" selected disabled hidden>Choose Moisture-Sensor here</option>
                    @foreach (var moistureSensor in _moistureSensors)
                    {
                        <option value="@moistureSensor.MoistureSensorId">
                            @moistureSensor.PinId (@_deviceType?.SensorPinMap[@moistureSensor.PinId])
                        </option>
                    }

                </select>
            </div>
            <div class="form-group">
                <label for="water-consumption" class="control-label">Water Consumption</label>
                <input id="water-consumption" class="form-control" type="number" @bind="@_irrigationProfile.WaterConsumption" />
            </div>
            <div class="form-group">
                <label for="threshold" class="control-label">Threshold</label>
                <input id="threshold" class="form-control" type="number" @bind="@_irrigationProfile.Threshold" />
            </div>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateIrrigationProfile" value="Save"/>
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel"/>
            </div>
        </div>
    </div>
</form>

@code {
    private readonly IrrigationProfile _irrigationProfile = new IrrigationProfile();

    private Guid DeviceId
    {
        get => _irrigationProfile.DeviceId;
        set => SelectedDevice(value);
    }
    
    private List<Device>? _devices;

    private List<Valve> _valves = new();
    private List<MoistureSensor> _moistureSensors = new();
    private DeviceType? _deviceType;


    protected override async Task OnInitializedAsync()
    {
        _devices = await DeviceService.GetAllDevicesAsync();
    }

    private async void SelectedDevice(Guid deviceId)
    {
        _irrigationProfile.DeviceId = deviceId;
        var device = await DeviceService.GetDeviceByIdAsync(_irrigationProfile.DeviceId);
        if (device is null)
        {
            return;
        }
        
        _valves = device.Valves ?? _valves;
        _moistureSensors = device.MoistureSensors ?? _moistureSensors;
        _deviceType = device.Type;

        _irrigationProfile.MoistureSensorId = _moistureSensors[0].MoistureSensorId;
        _irrigationProfile.ValveId = _valves[0].ValveId;

    }


    private async void CreateIrrigationProfile()
    {
        Console.WriteLine(_irrigationProfile.MoistureSensorId);
        await IrrigationProfileService.InsertIrrigationProfileAsync(_irrigationProfile);
        NavigationManager.NavigateTo("irrigation-profiles");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("irrigation-profiles");
    }
}