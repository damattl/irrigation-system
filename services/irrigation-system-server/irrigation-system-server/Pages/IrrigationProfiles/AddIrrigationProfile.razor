@page "/add-irrigation-profile"
@using IrrigationSystemServer.Models
@using IrrigationSystemServer.Services
@using Microsoft.AspNetCore.Components
@inject NavigationManager _navigationManager
@inject IrrigationProfileService _irrigationProfileService
@inject DeviceService _deviceService
@inject PlantProfileService _plantProfileService


<h2>Add Irrigation-Profile</h2>
<hr />

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="form-group">
                <label for="device" class="control-label">Device</label>
                <select @bind="_deviceId" class="form-control" id="device">
                    @if (_devices != null)
                    {
                        @foreach(var device in _devices)
                        {
                            <option value="@device.DeviceId">@device.DeviceId</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="plant-profile" class="control-label">Plant-Profile</label>
                <select @bind="irrigationProfile.PlantProfileId" class="form-control" id="plant-profile">
                    <option value="" selected disabled hidden>Choose Device here</option>
                    @if (_plantProfiles != null)
                    {
                        @foreach (var plantProfile in _plantProfiles)
                        {
                            <option value="@plantProfile.PlantProfileId">@plantProfile.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="valve" class="control-label">Valve</label>
                <select @bind="irrigationProfile.ValveId" class="form-control" id="valve">
                    <option value="" selected disabled hidden>Choose Valve here</option>
                    @foreach(var valve in _valves)
                    {
                        <option value="@valve.ValveId">@valve.PinId</option>
                    }
                    
                </select>
            </div>
            <div class="form-group">
                <label for="moisture-sensor" class="control-label">Moisture-Sensor</label>
                <select @bind="irrigationProfile.MoistureSensorId" class="form-control" id="moisture-sensor">
                    <option value="" selected disabled hidden>Choose Moisture-Sensor here</option>
                    @foreach(var moistureSensor in _moistureSensors)
                    {
                        <option value="@moistureSensor.MoistureSensorId">@moistureSensor.PinId</option>
                    }

                </select>
            </div>
        </div>
    </div>

    <div class="row mt-2">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateIrrigationProfile" value="Save"/>
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel"/>
            </div>
        </div>
    </div>
</form>

@code {
    readonly IrrigationProfile irrigationProfile = new IrrigationProfile();

    private Guid _deviceId
    {
        get => irrigationProfile.DeviceId;
        set => SelectedDevice(value);
    }
    
    private List<Device>? _devices;
    private List<PlantProfile>? _plantProfiles;

    private List<Valve> _valves = new();
    private List<MoistureSensor> _moistureSensors = new();

    protected override async Task OnInitializedAsync()
    {
        _devices = await _deviceService.GetAllDevicesAsync();
        _plantProfiles = await _plantProfileService.GetAllPlantProfilesAsync();
    }

    private async void SelectedDevice(Guid deviceId)
    {
        irrigationProfile.DeviceId = deviceId;
        var device = await _deviceService.GetDeviceByIdAsync(irrigationProfile.DeviceId);
        if (device is null)
        {
            return;
        }
        
        _valves = device.Valves ?? _valves;
        _moistureSensors = device.MoistureSensors ?? _moistureSensors;

        irrigationProfile.MoistureSensorId = _moistureSensors[0].MoistureSensorId;
        irrigationProfile.ValveId = _valves[0].ValveId;

    }


    private async void CreateIrrigationProfile()
    {
        Console.WriteLine(irrigationProfile.MoistureSensorId);
        await _irrigationProfileService.InsertIrrigationProfileAsync(irrigationProfile);
        _navigationManager.NavigateTo("irrigation-profiles");
    }
    void Cancel()
    {
        _navigationManager.NavigateTo("irrigation-profiles");
    }
}